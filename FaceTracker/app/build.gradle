apply plugin: 'com.android.application'

project.ext.ASSET_DIR = projectDir.toString() + '/assets'
def bazelLocation = '/usr/local/bin/bazel'
def tensorflow_root = '/home/irina/tensorflow'
def cpuType = 'arm64-v8a'

// Output directory in the local directory for packaging into the APK.
def nativeOutDir = 'libs/' + cpuType

// Default to building with Bazel and override with make if requested.
def nativeBuildRule = 'buildNativeBazel'
def inferenceLibPath = tensorflow_root + '/bazel-bin/tensorflow/contrib/android/libtensorflow_inference.so'
android {
    signingConfigs {
        config {
            keyAlias 'test'
            keyPassword 'test123321'
            storeFile file('signing/test.jks')
            storePassword 'test123321'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.google.android.gms.samples.vision.face.facetracker"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -std=c++11"
                //abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                abiFilters "${cpuType}"
                arguments "-DANDROID_STL=gnustl_shared"
                //arguments "-DANDROID_STL=c++_shared"
                // AL:  arguments "-DANDROID_STL=c++_shared", "-DBUILD_opencv_apps:BOOL=ON", "-DBUILD_SHARED_LIBS:BOOL=ON"
                // Passes optional arguments to CMake.
                //arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // Sets a flag to enable format macro constants for the C compiler.
                //cFlags "-D__STDC_FORMAT_MACROS"
            }
        }    
        signingConfig signingConfigs.config
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    sourceSets { // AL: added
//        main {
//            jniLibs.srcDirs = ['src/main/jniLibs']
//            jni.srcDirs = ['src/main/jni', 'src/main/jniLibs/']
//            //jni.srcDirs = []
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    testBuildType "release"
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    productFlavors {
    }
    lintOptions {
        abortOnError false
    }
}

task buildNativeBazel(type: Exec) {
    workingDir tensorflow_root
    commandLine bazelLocation, 'build', '-c', 'opt',  \
         'tensorflow/examples/android:tensorflow_native_libs',  \
         '--crosstool_top=//external:android/crosstool',  \
         '--cpu=' + cpuType,  \
         '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'
}

task buildNativeMake(type: Exec) {
    environment "NDK_ROOT", android.ndkDirectory
    // Tip: install ccache and uncomment the following to speed up
    // builds significantly.
    // environment "CC_PREFIX", 'ccache'
    workingDir tensorflow_root
    commandLine 'tensorflow/contrib/makefile/build_all_android.sh',  \
         '-s',  \
         'tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in',  \
         '-t',  \
         'libtensorflow_inference.so libtensorflow_demo.so'  \
         //, '-T'  // Uncomment to skip protobuf and speed up subsequent builds.
}

task copyNativeLibs(type: Copy) {
    from inferenceLibPath
    into nativeOutDir
    duplicatesStrategy = 'include'
    dependsOn nativeBuildRule
    fileMode 0644
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:23.4.0'
    implementation 'com.android.support:design:23.4.0'
    implementation 'com.google.android.gms:play-services-vision:9.4.0+'
    implementation 'com.shamanland:xdroid-toaster:0.2.4'
    implementation 'org.tensorflow:tensorflow-android:+'
}
